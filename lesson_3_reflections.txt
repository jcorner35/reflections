When would you want to use a remote repository rather than keeping all your work local?

A remote repository is useful in several ways. 
When collabarating with others on the same project, having the project stored locally makes it difficult to get the changes others have made.
Having a remote repository allows you to easily 'pull' others changes, as well as 'push' your own.
Having a remote repository makes it easier to get help.
Finally and perhaps most importantly having a remote repository also backs up your code. 
Should anything catastrohpic happen to your pc, you will not lose your data if it is stored remotely.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Manually pulling changes gives you control over when your code is changed.
This is not an issue if only you are modifying code on the remote.
However, if the remote is shared, others can update teh code on the remote without your knowledge.
If the remote is updated without your knowledge and your repository is automatically kept up to date with the remote, these unknown changes will automatically be merged with your local repository.
This can cause confusion, bugs and code that no longer compiles. Not good.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork is a github invention that clones a github repository into another github repository.
Forking points back to the originating repository, giving credit to the creator.
A clone, like a fork, is a copy of repository. 
A clone can be be a duplicate of a remote repository or a local repository. 
A fork is always a clone, but a clone is not always a fork.
A branch is part of a repository, allowing independent development of different features. 
A branch does not create a copy of any files in the repository, instead it is only a label that is applied to a set of changes.